{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodoId","className","map","todo","id","completed","title","type","onClick","TodoFilter","selectedOption","searchQuery","onChangeSelect","onChangeSearch","value","onChange","event","target","placeholder","style","pointerEvents","wait","delay","Promise","resolve","setTimeout","get","url","fullURL","then","fetch","res","json","Loader","memo","TodoModal","setTodoId","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","todoId","setSelectedOption","setSearchQuery","filteredTodos","useMemo","filter","filteredTodo","toLowerCase","includes","trim","selectedTodo","find","handleSelectTodo","useCallback","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d22259f2.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  selectedTodoId: number\n  selectTodo: (id: number) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          todos.map(todo => (\n            <tr\n              key={todo.id}\n              data-cy=\"todo\"\n              className=\"\"\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {\n                  todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )\n                }\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={\n                  todo.completed ? 'has-text-success' : 'has-text-danger'\n                }\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                {selectedTodoId === todo.id ? (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button is-link\"\n                    type=\"button\"\n                    onClick={() => selectTodo(0)}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  </button>\n                ) : (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => selectTodo(todo.id)}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                )}\n              </td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\ntype Props = {\n  selectedOption: string\n  searchQuery: string\n  onChangeSelect: (selectedOption: string) => void\n  onChangeSearch: (searchQuery: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectedOption,\n  searchQuery,\n  onChangeSelect,\n  onChangeSearch,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          value={selectedOption}\n          onChange={(event) => onChangeSelect(event.target.value)}\n          data-cy=\"statusSelect\"\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={searchQuery}\n        onChange={(event) => onChangeSearch(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {\n          searchQuery && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onChangeSearch('')}\n            />\n          )\n        }\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport function wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { memo } from 'react';\nimport { wait } from '../../api';\nimport './Loader.scss';\n\nexport const Loader: React.FC = memo(() => {\n  wait(300);\n\n  return (\n    <div className=\"Loader\" data-cy=\"loader\">\n      <div className=\"Loader__content\" />\n    </div>\n  );\n});\n","import React, { memo, useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo\n  setTodoId: (id: number) => void\n};\n\nexport const TodoModal: React.FC<Props> = memo(({ todo, setTodoId }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setTodoId(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","/* eslint-disable max-len */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredTodos = useMemo(\n    () => todos.filter(todo => {\n      const filteredTodo = todo.title.toLowerCase().includes(searchQuery.trim().toLowerCase());\n\n      switch (selectedOption) {\n        case 'completed':\n          return filteredTodo && todo.completed;\n        case 'active':\n          return filteredTodo && !todo.completed;\n        case 'all':\n          return filteredTodo;\n        default:\n          return true;\n      }\n    }), [todos, selectedOption, searchQuery],\n  );\n\n  const selectedTodo = useMemo(\n    () => todos.find(todo => todo.id === todoId), [todoId, todos],\n  );\n\n  const handleSelectTodo = useCallback((id: number) => setTodoId(id), []);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedOption={selectedOption}\n                searchQuery={searchQuery}\n                onChangeSelect={setSelectedOption}\n                onChangeSearch={setSearchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                todos.length === 0\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      todos={filteredTodos}\n                      selectedTodoId={todoId}\n                      selectTodo={handleSelectTodo}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} setTodoId={setTodoId} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}